apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    field.cattle.io/creatorId: user-sfp46
    field.cattle.io/publicEndpoints: '[{"addresses":["144.91.64.132"],"port":80,"protocol":"HTTP","serviceName":"default:ingress-a452796366f1964e3b47b2fb6abe42e2","ingressName":"default:docker-node-example","hostname":"docker-node-example.default.144.91.64.132.xip.io","allNodes":true}]'
  creationTimestamp: "2019-09-10T09:56:10Z"
  generation: 3
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-docker-node-example
  name: docker-node-example
  namespace: default
  resourceVersion: "335779"
  selfLink: /apis/apps/v1beta2/namespaces/default/deployments/docker-node-example
  uid: 37b9da1f-d3b1-11e9-a1d6-0050563eb5f6
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-docker-node-example
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2019-09-10T10:11:01Z"
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-docker-node-example
    spec:
      containers:
      - image: index.docker.io/chomamateusz/sandbox:docker-node-example
        imagePullPolicy: Always
        name: docker-node-example
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: chomamateusz
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2019-09-10T09:56:35Z"
    lastUpdateTime: "2019-09-10T09:56:35Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2019-09-10T09:56:10Z"
    lastUpdateTime: "2019-09-10T10:11:07Z"
    message: ReplicaSet "docker-node-example-8675bc5d94" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
